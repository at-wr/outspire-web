---
import MainLayout from '../../layouts/MainLayout.astro';
import { createDeepLink, getPathDescription, APP_STORE_URL, AFDIAN_URL } from '../../lib/deeplink';

// Tell Astro to render this page on the server (not at build time)
export const prerender = false;

// Get the path from URL parameters
const { path } = Astro.params;
const fullPath = path || '';
const pathDescription = getPathDescription(fullPath);
const deepLink = createDeepLink(fullPath as any);
---

<MainLayout title={pathDescription}>
  <section class="container mx-auto max-w-7xl px-4 py-12 md:py-24">
    <div class="mx-auto max-w-md space-y-6 text-center">
      <div class="space-y-2">
        <h1 class="text-2xl font-bold tracking-tight sm:text-3xl">Quick Actions</h1>
        <p class="text-slate-600">
          Ready to open <span class="font-medium">{pathDescription}</span> in the Outspire app
        </p>
      </div>
      
      <!-- WeChat specific guide (hidden by default) -->
      <div id="wechatGuide" class="hidden rounded-lg border border-blue-200 bg-blue-50 p-4 text-sm text-slate-800">
        <div class="flex items-center gap-2 mb-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-600">
            <circle cx="12" cy="12" r="10"/>
            <line x1="12" y1="8" x2="12" y2="12"/>
            <line x1="12" y1="16" x2="12.01" y2="16"/>
          </svg>
          <p class="font-medium text-base">Opening from WeChat</p>
        </div>
        <p class="mb-3">Only one step ahead...!</p>
        <div class="flex flex-col items-start gap-2 mb-3">
          <div class="flex items-center gap-2">
            <div class="flex-shrink-0 w-5 h-5 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center text-xs font-medium">1</div>
            <p>Tap the "..." in the top corner</p>
          </div>
          <div class="flex items-center gap-2">
            <div class="flex-shrink-0 w-5 h-5 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center text-xs font-medium">2</div>
            <p>Select "Open in Safari/Browser"</p>
          </div>
          <div class="flex items-center gap-2">
            <div class="flex-shrink-0 w-5 h-5 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center text-xs font-medium">3</div>
            <p>Then tap "Open in App" button</p>
          </div>
        </div>
      </div>

      <!-- In-app browser warning (hidden by default) -->
      <div id="inAppBrowserGuide" class="hidden rounded-lg border border-blue-200 bg-blue-50 p-4 text-sm text-slate-800">
        <div class="flex items-center gap-2 mb-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-600">
            <circle cx="12" cy="12" r="10"/>
            <line x1="12" y1="8" x2="12" y2="12"/>
            <line x1="12" y1="16" x2="12.01" y2="16"/>
          </svg>
          <p class="font-medium text-base">Quick Tip</p>
        </div>
        <p class="mb-2">For the best experience, we recommend opening this in your device's default browser (Safari/Chrome).</p>
      </div>

      <div class="flex flex-col items-center justify-center space-y-4">
        <!-- Primary action button -->
        <a 
          href={deepLink}
          id="openAppBtn"
          class="inline-flex h-12 w-full max-w-xs items-center justify-center rounded-md bg-slate-900 px-8 text-sm font-medium text-white shadow transition-colors hover:bg-slate-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-slate-950"
        >
          Open in App
        </a>
        
        <p class="text-sm text-slate-500">Tap the button above to go ahead</p>
      </div>
      
      <div class="rounded-lg border border-slate-200 bg-slate-50 p-4 text-sm text-slate-700">
        <p>If the app doesn't open, you may not have Outspire installed.</p>
        <p class="mt-2">
          <a 
            href={AFDIAN_URL}
            class="text-slate-900 font-medium underline underline-offset-4 hover:text-slate-700"
            target="_blank"
          >
            Download via TestFlight
          </a>
        </p>
      </div>
      
      <div id="platformSpecificHelp" class="hidden rounded-lg border border-slate-200 bg-blue-50 p-4 text-sm text-slate-800">
        <p class="font-medium">Need help?</p>
        <div id="iosHelp" class="hidden mt-2">
          <p>On iOS, you might need to:</p>
          <ul class="list-disc list-inside mt-1 space-y-1">
            <li>Open this page in Safari (not in-app browsers)</li>
            <li>Allow Outspire to open when prompted</li>
          </ul>
        </div>
        <div id="androidHelp" class="hidden mt-2">
          <p>On Android, you might need to:</p>
          <ul class="list-disc list-inside mt-1 space-y-1">
            <li>Select "Open with Outspire" when prompted</li>
            <li>Allow Outspire to open URL schemes in settings</li>
          </ul>
        </div>
        <div id="desktopHelp" class="hidden mt-2">
          <p>On desktop browsers, app URLs typically don't work.</p>
          <p class="mt-1">Please use your mobile device to open this link.</p>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<script>
  // Store WeChat status in session storage to remember across page loads
  // But clear it when checking again
  const checkIsWeChat = () => {
    const isWeChat = /MicroMessenger/i.test(navigator.userAgent);
    // If we're not in WeChat anymore, clear the flag
    if (!isWeChat) {
      sessionStorage.removeItem('was_in_wechat');
      return false;
    }
    
    // If we are in WeChat, set the flag
    sessionStorage.setItem('was_in_wechat', 'true');
    return true;
  };
  
  // This helps us know if the user was previously in WeChat but is now in Safari
  const wasInWeChat = () => {
    return sessionStorage.getItem('was_in_wechat') === 'true';
  };

  // Platform detection
  const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;
  const isAndroid = /Android/.test(navigator.userAgent);
  const isMobile = isIOS || isAndroid;
  const isWeChat = checkIsWeChat();
  const isInAppBrowser = 
    (!isWeChat && ( // Only check these if not already identified as WeChat
      /Line\//i.test(navigator.userAgent) || 
      /FBAN|FBAV/i.test(navigator.userAgent) || 
      /QQ\//i.test(navigator.userAgent) ||
      /Instagram/i.test(navigator.userAgent) ||
      /Weibo/i.test(navigator.userAgent)
    ));
  
  // Show appropriate help text based on platform
  document.addEventListener('DOMContentLoaded', () => {
    const platformHelp = document.getElementById('platformSpecificHelp');
    const iosHelp = document.getElementById('iosHelp');
    const androidHelp = document.getElementById('androidHelp');
    const desktopHelp = document.getElementById('desktopHelp');
    const wechatGuide = document.getElementById('wechatGuide');
    const inAppBrowserGuide = document.getElementById('inAppBrowserGuide');
    const openAppBtn = document.getElementById('openAppBtn');
    
    // Only show WeChat guide if currently in WeChat (not if previously in WeChat)
    if (isWeChat && wechatGuide) {
      wechatGuide.classList.remove('hidden');
      // Make the button less prominent in WeChat since it won't work directly
      if (openAppBtn) {
        openAppBtn.classList.add('bg-slate-700');
        openAppBtn.classList.add('hover:bg-slate-800');
        openAppBtn.classList.remove('bg-slate-900');
        openAppBtn.classList.remove('hover:bg-slate-900/90');
      }
    } 
    // Show in-app browser guide if in another in-app browser
    else if (isInAppBrowser && inAppBrowserGuide) {
      inAppBrowserGuide.classList.remove('hidden');
    }
    
    if (platformHelp) {
      platformHelp.classList.remove('hidden');
      
      if (isIOS && iosHelp) {
        iosHelp.classList.remove('hidden');
      } else if (isAndroid && androidHelp) {
        androidHelp.classList.remove('hidden');
      } else if (!isMobile && desktopHelp) {
        desktopHelp.classList.remove('hidden');
      }
    }
  });
</script>
